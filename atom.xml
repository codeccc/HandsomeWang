<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>樱花洛</title>
  <subtitle>too young,too simple...</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://codewang.site/"/>
  <updated>2017-08-09T08:35:38.604Z</updated>
  <id>http://codewang.site/</id>
  
  <author>
    <name>樱花洛</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>mvplib框架讲解之mvp篇</title>
    <link href="http://codewang.site/mvplib%E6%A1%86%E6%9E%B6%E8%AE%B2%E8%A7%A3%E4%B9%8Bmvp%E7%AF%87.html"/>
    <id>http://codewang.site/mvplib框架讲解之mvp篇.html</id>
    <published>2017-08-08T09:52:24.000Z</published>
    <updated>2017-08-09T08:35:38.604Z</updated>
    
    <content type="html"><![CDATA[<div class="note primary"><p>贵有恒何必三更起五更睡;最无益,只怕一日曝十日寒。 </p>
</div>
<blockquote class="blockquote-center">这篇文章讲述mvplib依赖库的相关功能及其用法。</blockquote>

<h3 id="一、mvplib的build-gradle-引用的依赖库及其他配置"><a href="#一、mvplib的build-gradle-引用的依赖库及其他配置" class="headerlink" title="一、mvplib的build.gradle 引用的依赖库及其他配置"></a>一、mvplib的<code>build.gradle</code> 引用的依赖库及其他配置</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line">apply plugin: <span class="string">'com.android.library'</span></div><div class="line"></div><div class="line">android &#123;</div><div class="line">    compileSdkVersion <span class="number">25</span></div><div class="line">    buildToolsVersion <span class="string">"25.0.3"</span></div><div class="line"></div><div class="line">    defaultConfig &#123;</div><div class="line">        minSdkVersion <span class="number">14</span></div><div class="line">        targetSdkVersion <span class="number">21</span></div><div class="line">        versionCode <span class="number">1</span></div><div class="line">        versionName <span class="string">"1.0"</span></div><div class="line"></div><div class="line">        testInstrumentationRunner <span class="string">"android.support.test.runner.AndroidJUnitRunner"</span></div><div class="line"></div><div class="line">    &#125;</div><div class="line">    buildTypes &#123;</div><div class="line">        release &#123;</div><div class="line">            <span class="function">minifyEnabled <span class="keyword">false</span></span></div><div class="line">            proguardFiles <span class="title">getDefaultProguardFile</span><span class="params">(<span class="string">'proguard-android.txt'</span>)</span>, 'proguard-rules.pro'</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    dataBinding &#123;<span class="comment">//启用DataBinding</span></div><div class="line">        enabled = <span class="keyword">true</span></div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">dependencies &#123;</div><div class="line">    <span class="function">compile <span class="title">fileTree</span><span class="params">(dir: <span class="string">'libs'</span>, include: [<span class="string">'*.jar'</span>])</span></span></div><div class="line">    compile 'com.zhy:okhttputils:2.6.2'<span class="comment">//OKHttpUtils库,引入OKhttp和Okio,习惯原生okhttp框架可以直接使用原生类</span></div><div class="line">    compile 'com.alibaba:fastjson:1.2.35'<span class="comment">//json解析框架,阿里巴巴出品</span></div><div class="line">    compile 'com.xsf:zeusLog:1.0.0'<span class="comment">//日志打印库</span></div><div class="line">    compile 'com.jph.takephoto:takephoto_library:4.0.3'<span class="comment">//图片单选、多选、裁剪、压缩、运行时权限、Fileprovider适配于一体</span></div><div class="line">    compile 'com.zhy:autolayout:1.4.5'<span class="comment">//屏幕适配</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="二、mvplib的项目结构介绍"><a href="#二、mvplib的项目结构介绍" class="headerlink" title="二、mvplib的项目结构介绍"></a>二、mvplib的项目结构介绍</h3><p><img src="http://osk74z31x.bkt.clouddn.com/%E7%9B%AE%E5%BD%95%E7%BB%93%E6%9E%841.png" alt="目录结构"></p>
<p>包名说明 <code>Package:</code></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">adapter-------&gt;存放对Listview/Gridview的Adapter进行封装的类</div><div class="line">autolayout----&gt;屏幕适配相关类</div><div class="line">base----------&gt;存放BaseActivity,BaseFragment类,存放mvp基类</div><div class="line">base----mvp---&gt;mvp基类</div><div class="line">http----------&gt;网络请求相关封装及配置</div><div class="line">transform-----&gt;对Glide加载圆形圆角图片的拓展</div><div class="line">util----------&gt;Sharedpreferences封装,Toast封装,Activity管理封装等类</div><div class="line">widget--------&gt;加载提示框</div></pre></td></tr></table></figure>
<h3 id="三、-使用mvplib需要注意的地方"><a href="#三、-使用mvplib需要注意的地方" class="headerlink" title="三、 使用mvplib需要注意的地方"></a>三、 使用mvplib需要注意的地方</h3><h4 id="1-关于Application的使用"><a href="#1-关于Application的使用" class="headerlink" title="1.关于Application的使用"></a>1.关于<code>Application</code>的使用</h4><pre><code>     如果需要用到`Application`则继承自mvplib的`App`,否则在`AndroidManifest.xml`的`application`中增加name属性,值为`com.beyondin.mvplib.App`
</code></pre><h4 id="2-meta-data的配置"><a href="#2-meta-data的配置" class="headerlink" title="2.meta-data的配置"></a>2.<code>meta-data</code>的配置</h4><p>​        因为使用了<code>autolayout</code> 框架依赖mvplib需要在<code>AndroidManifest.xml</code>中加入如下代码:</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">&lt;meta-data</div><div class="line">    android:name=<span class="string">"design_width"</span></div><div class="line">    android:value=<span class="string">"1280"</span>/&gt;</div><div class="line">&lt;meta-data</div><div class="line">    android:name=<span class="string">"design_height"</span></div><div class="line">    android:value=<span class="string">"720"</span>/&gt;</div></pre></td></tr></table></figure>
<p>关于屏幕适配<code>autolayout</code>的用法在这里查看:</p>
<p><a href="https://github.com/hongyangAndroid/AndroidAutoLayout" target="_blank" rel="external">Android屏幕适配方案，直接填写设计图上的像素尺寸即可完成适配，最大限度解决适配问题。</a></p>
<h3 id="四、正式使用mvplib进行开发"><a href="#四、正式使用mvplib进行开发" class="headerlink" title="四、正式使用mvplib进行开发"></a>四、正式使用mvplib进行开发</h3><p>正式开发之前我们先来看一张图来理解一下什么是mvp模式:</p>
<p><img src="http://osk74z31x.bkt.clouddn.com/mvp_moshi.jpg" alt="mvpm模式"></p>
<p>​    MVP模式的核心思想就是把Activity中的UI逻辑抽象成view接口，把Controller相关的业务逻辑抽象成presenter接口，Model还是原来的Model。</p>
<p>​    MVP模式的作用分离了视图逻辑和业务逻辑，降低耦合度 Activity只处理生命周期相关的东西，代码更加简洁 视图逻辑和业务逻辑分别抽象到了View和Presenter的接口中，提高了代码的可阅读性 Presenter被抽象成接口，可以有多种具体的实现，方便进行单元测试 把业务逻辑抽象到Presenter中，避免后台线程引用Activity导致Activity的资源无法被系统回收从而引起内存泄漏和OOMActivity代码变的更加简洁</p>
<p><strong>接下来我就以一个登录的例子来演示mvplib的用法:</strong></p>
<p>首先我们来分析下登录界面的所具有的功能:</p>
<p>​    1.有用户名和密码两个文本输入框,一个登录按钮,点击登录按钮获取到文本框的值,然后执行登录操作;</p>
<p>​    2.将帐号密码保存到本地,本地持久化;</p>
<p>​    3.下次打开登录界面自动填写用户名和密码;</p>
<h5 id="1-首先先编写登录界面activity-login-xml的代码-我这里增加一个文本来展示登录的结果-实现的效果图如下"><a href="#1-首先先编写登录界面activity-login-xml的代码-我这里增加一个文本来展示登录的结果-实现的效果图如下" class="headerlink" title="1.首先先编写登录界面activity_login.xml的代码,我这里增加一个文本来展示登录的结果,实现的效果图如下:"></a>1.首先先编写登录界面<code>activity_login.xml</code>的代码,我这里增加一个文本来展示登录的结果,实现的效果图如下:</h5><p><img src="http://osk74z31x.bkt.clouddn.com/login.png" alt=""></p>
<p>代码如下:</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">layout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></div><div class="line">        <span class="attr">xmlns:tools</span>=<span class="string">"http://schemas.android.com/tools"</span>&gt;</div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">LinearLayout</span></span></div><div class="line">        <span class="attr">android:id</span>=<span class="string">"@+id/activity_main"</span></div><div class="line">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">        <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></div><div class="line">        <span class="attr">android:gravity</span>=<span class="string">"center"</span></div><div class="line">        <span class="attr">android:orientation</span>=<span class="string">"vertical"</span></div><div class="line">        <span class="attr">android:paddingBottom</span>=<span class="string">"@dimen/activity_vertical_margin"</span></div><div class="line">        <span class="attr">android:paddingLeft</span>=<span class="string">"@dimen/activity_horizontal_margin"</span></div><div class="line">        <span class="attr">android:paddingRight</span>=<span class="string">"@dimen/activity_horizontal_margin"</span></div><div class="line">        <span class="attr">android:paddingTop</span>=<span class="string">"@dimen/activity_vertical_margin"</span></div><div class="line">        <span class="attr">tools:context</span>=<span class="string">"com.beyondin.mvp.LoginActivity"</span>&gt;</div><div class="line"></div><div class="line">        <span class="tag">&lt;<span class="name">EditText</span></span></div><div class="line">            <span class="attr">android:id</span>=<span class="string">"@+id/edtUsername"</span></div><div class="line">            <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">            <span class="attr">android:hint</span>=<span class="string">"请输入用户名"</span>/&gt;</div><div class="line"></div><div class="line">        <span class="tag">&lt;<span class="name">EditText</span></span></div><div class="line">            <span class="attr">android:id</span>=<span class="string">"@+id/edtPassword"</span></div><div class="line">            <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">            <span class="attr">android:hint</span>=<span class="string">"请输入密码"</span></div><div class="line">            <span class="attr">android:inputType</span>=<span class="string">"textPassword"</span>/&gt;</div><div class="line"></div><div class="line">        <span class="tag">&lt;<span class="name">Button</span></span></div><div class="line">            <span class="attr">android:id</span>=<span class="string">"@+id/btnLogin"</span></div><div class="line">            <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">            <span class="attr">android:text</span>=<span class="string">"登录"</span>/&gt;</div><div class="line"></div><div class="line">        <span class="tag">&lt;<span class="name">TextView</span></span></div><div class="line">            <span class="attr">android:id</span>=<span class="string">"@+id/txtResult"</span></div><div class="line">            <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">            <span class="attr">android:layout_marginTop</span>=<span class="string">"50dp"</span></div><div class="line">            <span class="attr">android:text</span>=<span class="string">"登录结果:\n"</span>/&gt;</div><div class="line"></div><div class="line">    <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">layout</span>&gt;</span></div></pre></td></tr></table></figure>
<h5 id="2-确定登录要使用到的model"><a href="#2-确定登录要使用到的model" class="headerlink" title="2.确定登录要使用到的model"></a>2.确定登录要使用到的model</h5><p>登录需要用户名和密码,登录后会有登录的返回结果,其实登录不需要用到Model,这里为了做演示也为了方便对数据的同意处理我就编写了一个LoginModel,具体代码如下,很简单,就只包含用户名密码及返回的登陆结果:</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LoginModel</span> <span class="keyword">extends</span> <span class="title">BaseModel</span></span></div><div class="line">&#123;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> String username;<span class="comment">//用户名</span></div><div class="line">    <span class="keyword">private</span> String password;<span class="comment">//密码</span></div><div class="line"></div><div class="line">    <span class="keyword">private</span> Result result;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getUsername</span><span class="params">()</span></span></div><div class="line">    &#123;</div><div class="line">        <span class="keyword">return</span> username;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUsername</span><span class="params">(String username)</span></span></div><div class="line">    &#123;</div><div class="line">        <span class="keyword">this</span>.username = username;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getPassword</span><span class="params">()</span></span></div><div class="line">    &#123;</div><div class="line">        <span class="keyword">return</span> password;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPassword</span><span class="params">(String password)</span></span></div><div class="line">    &#123;</div><div class="line">        <span class="keyword">this</span>.password = password;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> Result <span class="title">getResult</span><span class="params">()</span></span></div><div class="line">    &#123;</div><div class="line">        <span class="keyword">return</span> result;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setResult</span><span class="params">(Result result)</span></span></div><div class="line">    &#123;</div><div class="line">        <span class="keyword">this</span>.result = result;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">  	<span class="comment">/**</span></div><div class="line">  	 * 登录结果</div><div class="line">  	 **/</div><div class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">Result</span></span></div><div class="line">    &#123;</div><div class="line">        <span class="keyword">private</span> String data;</div><div class="line"></div><div class="line">        <span class="function"><span class="keyword">public</span> String <span class="title">getData</span><span class="params">()</span></span></div><div class="line">        &#123;</div><div class="line">            <span class="keyword">return</span> data;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setData</span><span class="params">(String data)</span></span></div><div class="line">        &#123;</div><div class="line">            <span class="keyword">this</span>.data = data;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h5 id="3-开始编写LoginView"><a href="#3-开始编写LoginView" class="headerlink" title="3.开始编写LoginView"></a>3.开始编写LoginView</h5><p>LoginView继承自BaseView,由于View是需要由Activity去实现具体的逻辑,所以这里将其定义成接口,BaseView里定义了五个常用的方法,如下:</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">loading</span><span class="params">()</span></span>;<span class="comment">//加载中</span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">stopLoading</span><span class="params">()</span></span>;<span class="comment">//停止加载</span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">shortToast</span><span class="params">(Object obj)</span></span>;<span class="comment">//Toast提示</span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">update</span><span class="params">(M m)</span></span>;<span class="comment">//更新控件数据</span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">updateList</span><span class="params">(List&lt;M&gt; list)</span></span>;<span class="comment">//更新列表</span></div></pre></td></tr></table></figure>
<p>登录界面我们上面提到过需要在启动的时候把数据从本地拿出来恢复到界面,所以在LoginView我们需要再单独去实现定义一个需要实现的方法:</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line">     * 从sp中拿到保存的登录帐号密码恢复到输入框中</div><div class="line">     *</div><div class="line">     * <span class="doctag">@param</span> model</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">resumeLogininfo</span><span class="params">(LoginModel model)</span></span>;</div></pre></td></tr></table></figure>
<p>,至此LoginView编写完成,完整代码如下:</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">LoginView</span>&lt;<span class="title">LoginModel</span> <span class="keyword">extends</span> <span class="title">BaseModel</span>&gt; <span class="keyword">extends</span> <span class="title">BaseView</span>&lt;<span class="title">LoginModel</span>&gt;</span></div><div class="line">&#123;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 从sp中拿到保存的登录帐号密码恢复到输入框中</div><div class="line">     *</div><div class="line">     * <span class="doctag">@param</span> model</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">resumeLogininfo</span><span class="params">(LoginModel model)</span></span>;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h5 id="4-开始编写LoginPresenter"><a href="#4-开始编写LoginPresenter" class="headerlink" title="4.开始编写LoginPresenter"></a>4.开始编写LoginPresenter</h5><p>Presenter负责我们的业务逻辑处理,比如与服务器进行数据交互,获取本地数据,一些与视图无关的其他操作逻辑等。</p>
<p>在上面需求中我们的LoginPresenter需要实现的业务逻辑有</p>
<h6 id="1-从Sharedpreferences中读取保存的用户名密码"><a href="#1-从Sharedpreferences中读取保存的用户名密码" class="headerlink" title="1.从Sharedpreferences中读取保存的用户名密码:"></a>1.从Sharedpreferences中读取保存的用户名密码:</h6><h6 id="2-执行登录操作-将用户名及密码提交至服务器登"><a href="#2-执行登录操作-将用户名及密码提交至服务器登" class="headerlink" title="2.执行登录操作,将用户名及密码提交至服务器登;"></a>2.执行登录操作,将用户名及密码提交至服务器登;</h6><h6 id="3-登录时将用户名密码保存到Sharedpreferences中"><a href="#3-登录时将用户名密码保存到Sharedpreferences中" class="headerlink" title="3.登录时将用户名密码保存到Sharedpreferences中;"></a>3.登录时将用户名密码保存到Sharedpreferences中;</h6><p>我们先来实现第一个逻辑,从Sharedpreferences中读取保存的用户名密码:</p>
<p>​    首先定义我们的LoginPresenter,需要继承自<code>BasePresenter&lt;LoginView&lt;LoginModel&gt;&gt;</code>并传入泛型修饰,然后定义我们需要用到的全局变量:</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">private</span>   LoginModel mLoginModel;</div><div class="line"><span class="keyword">private</span>   LoginModel.Result mResult;</div></pre></td></tr></table></figure>
<p>​    要获取sp中保存的用户名及密码,所以接着我们需要先初始化数据:</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">initData</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">if</span> (mLoginModel == <span class="keyword">null</span>)</div><div class="line">    &#123;</div><div class="line">        mLoginModel = <span class="keyword">new</span> LoginModel();</div><div class="line">        mLoginModel.setUsername(SPUtils.getWithAES(mContext, <span class="string">"username"</span>));</div><div class="line">        mLoginModel.setPassword(SPUtils.getWithAES(mContext, <span class="string">"password"</span>));</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>上面已经把先从本地获取到用户名及密码保存在<code>mLoginModel</code>中,接下来我们先处理登录帐号密码恢复到输入框中的逻辑。由于给Edittext设置值属于View的范畴,所以我们这里只调用LoginView中定义的方法<code>resumeLogininfo(LoginModel model)</code>将数据交由view去实现:</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * 登录帐号密码恢复到输入框中</div><div class="line">*/</div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">resumeLoginInfo</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">    mView.resumeLogininfo(mLoginModel);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>接下来我们来实现presenter中的第二个逻辑: 执行登录操作,将用户名及密码提交至服务器。</p>
<p>登录这块我就做一个假的登录效果来演示登录了,代码如下:</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">private</span> Handler mHandler = <span class="keyword">new</span> Handler(Looper.getMainLooper());</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * 登录</div><div class="line"> * <span class="doctag">@param</span> username 用户名</div><div class="line"> * <span class="doctag">@param</span> password 密码</div><div class="line"> */</div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">login</span><span class="params">(String username, String password)</span></span></div><div class="line">&#123;</div><div class="line">    mView.loading();</div><div class="line">    mLoginModel.setUsername(username);</div><div class="line">    mLoginModel.setPassword(password);</div><div class="line">    <span class="comment">//.....执行登录操作,这里做个假登录</span></div><div class="line">    mResult = <span class="keyword">new</span> LoginModel.Result();</div><div class="line">    mResult.setData(<span class="string">"登录成功"</span>);</div><div class="line">    mLoginModel.setResult(mResult);</div><div class="line">    <span class="comment">//保存登录信息</span></div><div class="line">    saveLoginInfo(username, password);</div><div class="line">    mHandler.postDelayed(<span class="keyword">new</span> Runnable()</div><div class="line">    &#123;</div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span></span></div><div class="line">        &#123;</div><div class="line">            mView.update(mLoginModel);</div><div class="line">            mView.stopLoading();</div><div class="line">        &#125;</div><div class="line">    &#125;, <span class="number">3000</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>登陆前需要弹出加载框,调用<code>mView.loading();</code>,登录成功后保存用户名密码,所以调用<code>saveLoginInfo</code>()方法,登录完成需要刷新界面,为了使加载框不一闪而过,所以这里我使用Handler来延迟刷新界面达到假的登录效果。</p>
<p>最后来实现我们presenter中第三个业务逻辑:登录时将用户名密码保存到Sharedpreferences中。</p>
<p>代码简单,我就不做过多说明,<code>SPUtils</code>是封装好的Sharedpreferences工具类,方法代码如下:</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">saveLoginInfo</span><span class="params">(String username, String password)</span></span></div><div class="line">&#123;</div><div class="line">    SPUtils.putWithAES(mContext, <span class="string">"username"</span>, username);</div><div class="line">    SPUtils.putWithAES(mContext, <span class="string">"password"</span>, password);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>最后我们再重写onDestory方法来释放我们的数据:</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * 销毁方法</div><div class="line"> */</div><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onDestory</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">super</span>.onDestory();</div><div class="line">    mLoginModel = <span class="keyword">null</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><strong><em>注意:</em></strong></p>
<p><em><code>onDestory</code> 方法可选择性重写,如果自己处理业务逻辑时持有了Activity的东西或者其余一些需要释放的东西可以在这里进行销毁或者释放。</em></p>
<p>至此,我们的Presenter中需要的逻辑处理完毕。LoginPresenter的完整代码如下:</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LoginPresenter</span> <span class="keyword">extends</span> <span class="title">BasePresenter</span>&lt;<span class="title">LoginView</span>&lt;<span class="title">LoginModel</span>&gt;&gt;</span></div><div class="line">&#123;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> LoginModel mLoginModel;</div><div class="line">    <span class="keyword">private</span> LoginModel.Result mResult;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">initData</span><span class="params">()</span></span></div><div class="line">    &#123;</div><div class="line">        <span class="keyword">if</span> (mLoginModel == <span class="keyword">null</span>)</div><div class="line">        &#123;</div><div class="line">            mLoginModel = <span class="keyword">new</span> LoginModel();</div><div class="line">            mLoginModel.setUsername(SPUtils.getWithAES(mContext, <span class="string">"username"</span>));</div><div class="line">            mLoginModel.setPassword(SPUtils.getWithAES(mContext, <span class="string">"password"</span>));</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> LoginModel <span class="title">getLoginInfo</span><span class="params">()</span></span></div><div class="line">    &#123;</div><div class="line">        <span class="keyword">return</span> mLoginModel;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 登录帐号密码恢复到输入框中</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">resumeLoginInfo</span><span class="params">()</span></span></div><div class="line">    &#123;</div><div class="line">        mView.resumeLogininfo(mLoginModel);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> Handler mHandler = <span class="keyword">new</span> Handler(Looper.getMainLooper());</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 登录</div><div class="line">     * <span class="doctag">@param</span> username 用户名</div><div class="line">     * <span class="doctag">@param</span> password 密码</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">login</span><span class="params">(String username, String password)</span></span></div><div class="line">    &#123;</div><div class="line">        mView.loading();</div><div class="line">        mLoginModel.setUsername(username);</div><div class="line">        mLoginModel.setPassword(password);</div><div class="line">        <span class="comment">//.....执行登录操作,这里做个假登录</span></div><div class="line"></div><div class="line">        mResult = <span class="keyword">new</span> LoginModel.Result();</div><div class="line">        mResult.setData(<span class="string">"登录成功"</span>);</div><div class="line">        mLoginModel.setResult(mResult);</div><div class="line"></div><div class="line">        <span class="comment">//保存登录信息</span></div><div class="line">        saveLoginInfo(username, password);</div><div class="line"></div><div class="line">        mHandler.postDelayed(<span class="keyword">new</span> Runnable()</div><div class="line">        &#123;</div><div class="line">            <span class="meta">@Override</span></div><div class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span></span></div><div class="line">            &#123;</div><div class="line">                mView.update(mLoginModel);</div><div class="line">                mView.stopLoading();</div><div class="line">            &#125;</div><div class="line">        &#125;, <span class="number">3000</span>);</div><div class="line"></div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">saveLoginInfo</span><span class="params">(String username, String password)</span></span></div><div class="line">    &#123;</div><div class="line">        SPUtils.putWithAES(mContext, <span class="string">"username"</span>, username);</div><div class="line">        SPUtils.putWithAES(mContext, <span class="string">"password"</span>, password);</div><div class="line">    &#125;</div><div class="line">  </div><div class="line">  	<span class="comment">/**</span></div><div class="line">     * 销毁方法</div><div class="line">     */</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onDestory</span><span class="params">()</span></span></div><div class="line">    &#123;</div><div class="line">        <span class="keyword">super</span>.onDestory();</div><div class="line">        mLoginModel = <span class="keyword">null</span>;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h5 id="5-编写Activity代码"><a href="#5-编写Activity代码" class="headerlink" title="5.编写Activity代码"></a>5.编写Activity代码</h5><p>Activity持有Presenter对象,并实现定义的View的接口,这我们先继承自<code>BaseActivity&lt;LoginView&lt;LoginModel&gt;, LoginPresenter, ActivityLoginBinding&gt;</code></p>
<p>重写如下方法:</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="function"><span class="keyword">protected</span> Class&lt;LoginPresenter&gt; <span class="title">getPresenterClass</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">return</span> LoginPresenter.class;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">initView</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">    mPresenter.resumeLoginInfo();<span class="comment">//恢复登录信息</span></div><div class="line">    mBinding.btnLogin.setOnClickListener(<span class="keyword">this</span>);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">initData</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">    mPresenter.initData();</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">create</span><span class="params">(Bundle savedInstanceState)</span></span></div><div class="line">&#123;</div><div class="line">    initData();<span class="comment">//初始化数据</span></div><div class="line">    initView();<span class="comment">//初始化控件</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">resume</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">pause</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">destory</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">    mPresenter.onDestory();<span class="comment">//释放Presenter持有的Activity,防止内存泄漏</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">int</span> <span class="title">getLayoutId</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">return</span> R.layout.activity_login;</div><div class="line">&#125;</div><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">switch</span> (v.getId())</div><div class="line">    &#123;</div><div class="line">        <span class="keyword">case</span> R.id.btnLogin:</div><div class="line">            mPresenter.login(</div><div class="line">                    mBinding.edtUsername.getText().toString().trim()</div><div class="line">                    , mBinding.edtPassword.getText().toString().trim()</div><div class="line">            );</div><div class="line">            <span class="keyword">break</span>;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>mPresenter在BaseActivity中初始化,子类Activity可以直接用,不过需要注意的是</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="function"><span class="keyword">protected</span> Class&lt;LoginPresenter&gt; <span class="title">getPresenterClass</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">return</span> LoginPresenter.class;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>这个方法需要返回与之匹配的Presenter。</p>
<p>然后实现LoginView接口,重写如下方法:</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">loading</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">if</span> (mLoadingDialog == <span class="keyword">null</span>)</div><div class="line">    &#123;</div><div class="line">        <span class="comment">//需要处理加载布局中的控件的相关处理逻辑可以选择设置LoadingPrepareListener监听</span></div><div class="line">        mLoadingDialog = <span class="keyword">new</span> LoadingDialog(LoginActivity.<span class="keyword">this</span>, R.layout.layout_loading, <span class="keyword">new</span> LoadingPrepareListener</div><div class="line">        &#123;</div><div class="line">            <span class="meta">@Override</span></div><div class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">load</span><span class="params">(View view)</span></span></div><div class="line">            &#123;</div><div class="line">                view.findViewById(R.id.btnStop).setOnClickListener(<span class="keyword">new</span> View.OnClickListener()</div><div class="line">                &#123;</div><div class="line">                    <span class="meta">@Override</span></div><div class="line">                    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span></span></div><div class="line">                    &#123;</div><div class="line">                        mLoadingDialog.dismissDialog(<span class="number">0</span>);</div><div class="line">                    &#125;</div><div class="line">                &#125;);</div><div class="line">            &#125;</div><div class="line">        &#125;);</div><div class="line">        <span class="comment">//不需要处理加载布局中的控件的相关处理逻辑传null</span></div><div class="line">        mLoadingDialog = <span class="keyword">new</span> LoadingDialog(<span class="keyword">this</span>, R.layout.layout_loading, <span class="keyword">null</span>);</div><div class="line">    &#125;</div><div class="line">    mLoadingDialog.showDialog();</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">stopLoading</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">  	<span class="comment">//设置延迟多少毫秒后关闭dialog</span></div><div class="line">    mLoadingDialog.dismissDialog(<span class="number">0</span>);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * 恢复帐号密码到输入框</div><div class="line"> * <span class="doctag">@param</span> model 包含帐号密码的实体类</div><div class="line"> */</div><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">resumeLogininfo</span><span class="params">(LoginModel model)</span></span></div><div class="line">&#123;</div><div class="line">    mBinding.edtUsername.setText(model.getUsername());</div><div class="line">    mBinding.edtPassword.setText(model.getPassword());</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">(LoginModel model)</span></span></div><div class="line">&#123;</div><div class="line">    mBinding.txtResult.setText(model.getResult().getData());</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">updateList</span><span class="params">(List&lt;LoginModel&gt; list)</span></span></div><div class="line">&#123;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><code>layout_loading.xml</code>代码如下:</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></div><div class="line">              <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></div><div class="line">              <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">              <span class="attr">android:background</span>=<span class="string">"@drawable/shape_bg_toast"</span></div><div class="line">              <span class="attr">android:gravity</span>=<span class="string">"center"</span></div><div class="line">              <span class="attr">android:orientation</span>=<span class="string">"vertical"</span></div><div class="line">              <span class="attr">android:padding</span>=<span class="string">"50dp"</span>&gt;</div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">ProgressBar</span></span></div><div class="line">        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></div><div class="line">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">        <span class="attr">android:indeterminateTint</span>=<span class="string">"#ff4439"</span>/&gt;</div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">Button</span></span></div><div class="line">        <span class="attr">android:id</span>=<span class="string">"@+id/btnStop"</span></div><div class="line">        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></div><div class="line">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">        <span class="attr">android:layout_marginTop</span>=<span class="string">"20dp"</span></div><div class="line">        <span class="attr">android:text</span>=<span class="string">"停止加载"</span>/&gt;</div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></div></pre></td></tr></table></figure>
<p>可以看到,Activity代码很简洁,都是些与View相关的东西,需要注意的是继承BaseActivity的泛型修饰,相关类前面已经便写好了,泛型修饰时可以直接写,需要注意Presenter的调用时机,根据自身需要适时调用presenter方法即可,需要注意一点的是  <strong>Presenter中的方法一般都要用public来修饰。</strong></p>
<p>到这里mvplib的用法演示完毕,使用者可以来写个注册来体验使用这个框架。</p>
<h3 id="五、-结尾-相关知识用法说明"><a href="#五、-结尾-相关知识用法说明" class="headerlink" title="五、 结尾  相关知识用法说明"></a>五、 结尾  相关知识用法说明</h3><p><a href="https://github.com/hongyangAndroid/AndroidAutoLayout" target="_blank" rel="external">Android屏幕适配方案，直接填写设计图上的像素尺寸即可完成适配，最大限度解决适配问题。</a></p>
<p><a href="https://github.com/hongyangAndroid/okhttputils" target="_blank" rel="external">OKHtputils的使用</a></p>
<p><a href="http://www.jcodecraeer.com/a/anzhuokaifa/androidkaifa/2015/0603/2992.html" target="_blank" rel="external">完全掌握Android Data Binding</a></p>
<p><a href="http://www.jianshu.com/p/c52909290e0e" target="_blank" rel="external">Android 使用FastJson解析json数据的手把手分析</a></p>
<p><a href="https://github.com/crazycodeboy/TakePhoto" target="_blank" rel="external">一款用于在Android设备上获取照片（拍照或从相册、文件中选择）、裁剪图片、压缩图片的开源工具库</a></p>
<p><a href="https://github.com/xsfelvis/ZeusLog" target="_blank" rel="external">支持移动端和控制台的日志工具</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;note primary&quot;&gt;&lt;p&gt;贵有恒何必三更起五更睡;最无益,只怕一日曝十日寒。 &lt;/p&gt;
&lt;/div&gt;
&lt;blockquote class=&quot;blockquote-center&quot;&gt;这篇文章讲述mvplib依赖库的相关功能及其用法。&lt;/blockquo
    
    </summary>
    
      <category term="android" scheme="http://codewang.site/categories/android/"/>
    
    
      <category term="android" scheme="http://codewang.site/tags/android/"/>
    
      <category term="mvp" scheme="http://codewang.site/tags/mvp/"/>
    
  </entry>
  
  <entry>
    <title>实现Android 彩色渐变状态栏</title>
    <link href="http://codewang.site/%E5%AE%9E%E7%8E%B0Android%20%E5%BD%A9%E8%89%B2%E6%B8%90%E5%8F%98%E7%8A%B6%E6%80%81%E6%A0%8F.html"/>
    <id>http://codewang.site/实现Android 彩色渐变状态栏.html</id>
    <published>2017-08-04T10:10:22.000Z</published>
    <updated>2017-08-04T11:29:36.202Z</updated>
    
    <content type="html"><![CDATA[<p>​        一般应用的开发都是纯色状态栏或者透明状态栏,一般开发者也很少或者基本不接触渐变色状态栏这个东西,但如果项目需求需要做渐变色状态栏,这种需求该如何处理了.接下来我将以我的实现效果为例,讲解这种效果对应的解决办法。话不多说,先来看一眼效果图吧:</p>
<p><img src="http://osk74z31x.bkt.clouddn.com/model_home_page.png?imageView/4/w/400/q/90" alt="image"></p>
<p>效果显示很不错的,接下来正式进入我们的教程。</p>
<p>1.首先在<code>colors.xml</code>中定义好使用的颜色<br><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&lt;color name="theme_color_one"&gt;#f8b195&lt;/color&gt;</div><div class="line">&lt;color name="theme_color_two"&gt;#f291b0&lt;/color&gt;</div></pre></td></tr></table></figure></p>
<p>2.在<code>drawable</code>文件加下创建<code>statusbar_theme_shape.xml</code>文件,并添加如下代码:<br><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;</div><div class="line">&lt;shape xmlns:android="http://schemas.android.com/apk/res/android"&gt;</div><div class="line"></div><div class="line">    &lt;corners android:radius="2dp"/&gt;</div><div class="line">    &lt;gradient</div><div class="line">        android:angle="0"</div><div class="line">        android:endColor="@color/theme_color_two"</div><div class="line">        android:startColor="@color/theme_color_one"/&gt;</div><div class="line"></div><div class="line">&lt;/shape&gt;</div></pre></td></tr></table></figure></p>
<p>3.在<code>layout</code>中创建<code>activity_base.xml</code>文件,添加如下代码:<br><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">&lt;LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"</div><div class="line">              android:id="@+id/root_view"</div><div class="line">              android:layout_width="match_parent"</div><div class="line">              android:layout_height="match_parent"</div><div class="line">              android:orientation="vertical"&gt;</div><div class="line"></div><div class="line">    &lt;View</div><div class="line">        android:id="@+id/statusBarBg"</div><div class="line">        android:layout_width="match_parent"</div><div class="line">        android:layout_height="wrap_content"</div><div class="line">        android:background="@drawable/btn_theme_shape"/&gt;</div><div class="line">    &lt;FrameLayout</div><div class="line">        android:id="@+id/content_view"</div><div class="line">        android:layout_width="match_parent"</div><div class="line">        android:layout_height="match_parent"</div><div class="line">        android:fillViewport="true"&gt;</div><div class="line">    &lt;/FrameLayout&gt;</div><div class="line">&lt;/LinearLayout&gt;</div></pre></td></tr></table></figure></p>
<p>3.创建<code>BaseActivity.class</code>类,添加如下代码:<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div></pre></td><td class="code"><pre><div class="line">	<span class="comment">//得到布局id</span></div><div class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">abstract</span> <span class="keyword">int</span> <span class="title">getLayoutId</span><span class="params">()</span></span>;</div><div class="line">    </div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(@Nullable Bundle savedInstanceState)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</div><div class="line">        <span class="keyword">if</span> (!isCustomStatusBar()) &#123;</div><div class="line">            initWindowParameter();</div><div class="line">        &#125;</div><div class="line">        <span class="comment">//设置视图</span></div><div class="line">        setContentView(R.layout.activity_base);</div><div class="line">        initContentView();</div><div class="line">    &#125;</div><div class="line">    <span class="comment">/**</span></div><div class="line">     *初始化内容视图</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initContentView</span><span class="params">()</span> </span>&#123;</div><div class="line">      	<span class="comment">//得到内容视图</span></div><div class="line">        mContentView = (ViewGroup) findViewById(R.id.content_view);</div><div class="line">      	<span class="comment">//得到状态栏视图</span></div><div class="line">        mStatusView = findViewById(R.id.statusBarBg);</div><div class="line">        <span class="keyword">if</span> (mLayoutView == <span class="keyword">null</span>) &#123;</div><div class="line">            <span class="keyword">int</span> layoutId = getLayoutId();</div><div class="line">            <span class="keyword">if</span> (layoutId != <span class="number">0</span>) &#123;</div><div class="line">                mBinding = DataBindingUtil.inflate(getLayoutInflater(), layoutId, mContentView, <span class="keyword">false</span>);</div><div class="line">            &#125;</div><div class="line">            <span class="comment">//得到继承自BaseActivity的Activity的根视图</span></div><div class="line">            mLayoutView = mBinding.getRoot();</div><div class="line">        &#125;</div><div class="line">        <span class="comment">//清除所有视图</span></div><div class="line">        mContentView.removeAllViews();</div><div class="line">        <span class="comment">//将子类的根视图添加到内容视图中</span></div><div class="line">        mContentView.addView(mLayoutView);</div><div class="line">        <span class="comment">//设置状态栏样式</span></div><div class="line">        setStatusBarColor();</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 设置状态栏颜色</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setStatusBarColor</span><span class="params">()</span> </span>&#123;</div><div class="line">      	<span class="comment">//从Android4.4开始加入对状态栏样式的更改</span></div><div class="line">        <span class="keyword">if</span> (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.KITKAT) &#123;</div><div class="line">          	<span class="comment">//得到状态栏高度并设置状态栏参数</span></div><div class="line">            LinearLayout.LayoutParams lParams = <span class="keyword">new</span> LinearLayout.LayoutParams(LinearLayout</div><div class="line">                    .LayoutParams.MATCH_PARENT, ScreenUtils.getStatusHeight(<span class="keyword">this</span>));</div><div class="line">            mStatusView.setBackgroundResource(R.drawable.btn_theme_shape);</div><div class="line">            mStatusView.setLayoutParams(lParams);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 设置状态栏等与Window相关的参数</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">initWindowParameter</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span> (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.LOLLIPOP) &#123;<span class="comment">//5.0+</span></div><div class="line">            View decorView = getWindow().getDecorView();</div><div class="line">            <span class="keyword">int</span> option = View.SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN</div><div class="line">                    | View.SYSTEM_UI_FLAG_LAYOUT_STABLE;</div><div class="line"><span class="comment">//            if (mIsLight) &#123; //如果StatusBar为亮色主题的话，则文字颜色为深色</span></div><div class="line"><span class="comment">//                option = option | View.SYSTEM_UI_FLAG_LIGHT_STATUS_BAR;</span></div><div class="line"><span class="comment">//            &#125;</span></div><div class="line">            decorView.setSystemUiVisibility(option);</div><div class="line">            <span class="comment">//设置透明状态栏</span></div><div class="line">            getWindow().setStatusBarColor(Color.TRANSPARENT);</div><div class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.KITKAT) &#123;<span class="comment">//4.4~5.0</span></div><div class="line">            WindowManager.LayoutParams localLayoutParams = getWindow().getAttributes();</div><div class="line">            <span class="comment">//设置透明状态栏</span></div><div class="line">            localLayoutParams.flags = (WindowManager.LayoutParams.FLAG_TRANSLUCENT_STATUS |</div><div class="line">                    localLayoutParams.flags);</div><div class="line">        &#125;</div><div class="line">        <span class="comment">//设置Activity与软键盘的交互方式</span></div><div class="line">        getWindow().setSoftInputMode(WindowManager.LayoutParams.SOFT_INPUT_ADJUST_PAN);</div><div class="line">    &#125;</div></pre></td></tr></table></figure></p>
<p>5.所有需要实现渐变状态栏的<code>Activity</code>继承自<code>BaseActivity</code>便可实现这种渐变色状态栏的效果</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;​        一般应用的开发都是纯色状态栏或者透明状态栏,一般开发者也很少或者基本不接触渐变色状态栏这个东西,但如果项目需求需要做渐变色状态栏,这种需求该如何处理了.接下来我将以我的实现效果为例,讲解这种效果对应的解决办法。话不多说,先来看一眼效果图吧:&lt;/p&gt;
&lt;p&gt;
    
    </summary>
    
      <category term="android" scheme="http://codewang.site/categories/android/"/>
    
    
      <category term="android" scheme="http://codewang.site/tags/android/"/>
    
      <category term="状态栏" scheme="http://codewang.site/tags/%E7%8A%B6%E6%80%81%E6%A0%8F/"/>
    
  </entry>
  
  <entry>
    <title>Android基于X5内核 WebView项目套壳优化</title>
    <link href="http://codewang.site/Android%E5%9F%BA%E4%BA%8EX5%E5%86%85%E6%A0%B8%20WebView%E9%A1%B9%E7%9B%AE%E5%A5%97%E5%A3%B3%E4%BC%98%E5%8C%96.html"/>
    <id>http://codewang.site/Android基于X5内核 WebView项目套壳优化.html</id>
    <published>2017-07-31T07:25:44.000Z</published>
    <updated>2017-07-31T07:25:34.519Z</updated>
    
    <content type="html"><![CDATA[<h5 id="一、webview加载缓慢-如何提高加载使用效率"><a href="#一、webview加载缓慢-如何提高加载使用效率" class="headerlink" title="一、webview加载缓慢,如何提高加载使用效率?"></a>一、webview加载缓慢,如何提高加载使用效率?</h5><ol>
<li><p>设置渲染等级为高</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">settings.setRenderPriority(WebSettings.RenderPriority.HIGH);</div></pre></td></tr></table></figure>
</li>
<li><p>在java代码中动态创建webview</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">WebView webView = <span class="keyword">new</span> WebView(getApplicationContext(), <span class="keyword">null</span>);</div><div class="line">webView.setLayoutParams(<span class="keyword">new</span> ViewGroup.LayoutParams(FrameLayout.LayoutParams.MATCH_PARENT, FrameLayout.LayoutParams.MATCH_PARENT));</div><div class="line">mBinding.mainView.addView(webView, <span class="number">0</span>);</div></pre></td></tr></table></figure>
</li>
</ol>
<h5 id="二、Webview缓存使用策略"><a href="#二、Webview缓存使用策略" class="headerlink" title="二、Webview缓存使用策略"></a>二、Webview缓存使用策略</h5><p>webview的五种缓存策略模式:<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> LOAD_DEFAULT = -<span class="number">1</span>;<span class="comment">//默认模式</span></div><div class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> LOAD_NORMAL = <span class="number">0</span>;<span class="comment">//普通模式</span></div><div class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> LOAD_CACHE_ELSE_NETWORK = <span class="number">1</span>;<span class="comment">//如果有缓存,优先加载缓存,否则从网络获取数据</span></div><div class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> LOAD_NO_CACHE = <span class="number">2</span>;<span class="comment">//不加载缓存,只从网络获取数据</span></div><div class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> LOAD_CACHE_ONLY = <span class="number">3</span>;<span class="comment">//只加载缓存</span></div></pre></td></tr></table></figure></p>
<p>如果加载的是静态页面,网页数据样式固定,则推荐使用<code>LOAD_CACHE_ELSE_NETWORK</code>模式;</p>
<p>如果加载的数据是从服务器动态获取的,比如帖子论坛页面,个人信息页面,则推荐使用<code>LOAD_NO_CACHE</code>,以保证每次都能获取最新内容</p>
<p>如果加载的网页是app端内置于<code>assets</code>目录写死的网页,则可以使用<code>LOAD_CACHE_ONLY</code>模式;</p>
<h5 id="三、关于webview页面输入法弹窗遮挡输入框的问题解决方案"><a href="#三、关于webview页面输入法弹窗遮挡输入框的问题解决方案" class="headerlink" title="三、关于webview页面输入法弹窗遮挡输入框的问题解决方案"></a>三、关于webview页面输入法弹窗遮挡输入框的问题解决方案</h5><p>在<code>Activity</code>的<code>OnCrate()</code>方法中加入如下代码:<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">this</span>.getWindow().setSoftInputMode(</div><div class="line">                WindowManager.LayoutParams.SOFT_INPUT_ADJUST_RESIZE |</div><div class="line">                        WindowManager.LayoutParams.SOFT_INPUT_STATE_HIDDEN</div><div class="line">        );</div></pre></td></tr></table></figure></p>
<p>,此段代码含义是输入法高度状态自适应,如果有输入法弹出,则重新调整页面布局使输入框处于输入法上面</p>
<h5 id="四、webview网页加载速度提升"><a href="#四、webview网页加载速度提升" class="headerlink" title="四、webview网页加载速度提升"></a>四、webview网页加载速度提升</h5><p>在开始加载前设置<code>settings.setBlockNetworkImage(true);</code>先屏蔽掉加载网页,然后在<br>设置webview的<code>setWebViewClient()</code>方法里<code>new</code>出新的<code>WebViewClient()</code>时,在重写的方法<code>onPageFinished()</code>中再设置<code>mWebSettings.setBlockNetworkImage(false);</code>取消图片加载屏蔽限制</p>
<h5 id="五、WebView避免内存泄漏"><a href="#五、WebView避免内存泄漏" class="headerlink" title="五、WebView避免内存泄漏"></a>五、WebView避免内存泄漏</h5><ul>
<li>不在xml中定义 Webview ，而是在需要的时候在Activity中创建，并且Context使用 getApplicationgContext()</li>
<li>在 Activity 销毁（ WebView ）的时候，先让 WebView 加载null内容，然后移除 WebView，再销毁 WebView，最后置空。<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onDestroy</span><span class="params">()</span> </span>&#123;</div><div class="line">    <span class="keyword">if</span> (mWebView != <span class="keyword">null</span>) &#123;</div><div class="line">        mWebView.loadDataWithBaseURL(<span class="keyword">null</span>, <span class="string">""</span>, <span class="string">"text/html"</span>, <span class="string">"utf-8"</span>, <span class="keyword">null</span>);</div><div class="line">        mWebView.clearHistory();</div><div class="line"></div><div class="line">        ((ViewGroup) mWebView.getParent()).removeView(mWebView);</div><div class="line">        mWebView.destroy();</div><div class="line">        mWebView = <span class="keyword">null</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">super</span>.onDestroy();</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
</ul>
<h5 id="六、Webview的Cookie处理"><a href="#六、Webview的Cookie处理" class="headerlink" title="六、Webview的Cookie处理"></a>六、<code>Webview</code>的<code>Cookie</code>处理</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * 设置浏览器的cookies</div><div class="line"> */</div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setCookies</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">if</span> (NetCenter.cookies.length() &gt; <span class="number">0</span>)</div><div class="line">    &#123;</div><div class="line">        CookieSyncManager.createInstance(AppApplication.getInstance());</div><div class="line">        CookieManager cookieManager = CookieManager.getInstance();</div><div class="line">        cookieManager.setAcceptCookie(<span class="keyword">true</span>);</div><div class="line">        <span class="keyword">if</span> (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.LOLLIPOP)</div><div class="line">        &#123;</div><div class="line">            cookieManager.setAcceptThirdPartyCookies(webView, <span class="keyword">true</span>);<span class="comment">//解决cookie更新失败的问题</span></div><div class="line">        &#125;</div><div class="line">        cookieManager.setCookie(NetCenter.PAGE_URL, NetCenter.cookies);</div><div class="line">        CookieSyncManager.getInstance().sync();</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line"><span class="comment">/**</span></div><div class="line"> * 清空浏览器的cookies</div><div class="line"> */</div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">clearCookies</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">    CookieSyncManager cookieSyncMngr =</div><div class="line">            CookieSyncManager.createInstance(<span class="keyword">this</span>);</div><div class="line">    CookieManager cookieManager = CookieManager.getInstance();</div><div class="line">    cookieManager.removeSessionCookie();<span class="comment">// 移除</span></div><div class="line">    cookieManager.removeAllCookie();</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h5 id="七、WebChromeClient文件上传处理"><a href="#七、WebChromeClient文件上传处理" class="headerlink" title="七、WebChromeClient文件上传处理"></a>七、WebChromeClient文件上传处理</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line">webView.setWebChromeClient(<span class="keyword">new</span> WebChromeClient()</div><div class="line">&#123;</div><div class="line">    <span class="comment">//扩展浏览器上传文件</span></div><div class="line">    <span class="comment">//3.0++版本</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">openFileChooser</span><span class="params">(ValueCallback&lt;Uri&gt; uploadMsg, String acceptType)</span></span></div><div class="line">    &#123;</div><div class="line">        </div><div class="line">        openPicForWebClient(uploadMsg);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">//3.0--版本</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">openFileChooser</span><span class="params">(ValueCallback&lt;Uri&gt; uploadMsg)</span></span></div><div class="line">    &#123;</div><div class="line">        </div><div class="line">        openPicForWebClient(uploadMsg);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">openFileChooser</span><span class="params">(ValueCallback&lt;Uri&gt; uploadMsg, String acceptType, String capture)</span></span></div><div class="line">    &#123;</div><div class="line">       </div><div class="line">        openPicForWebClient(uploadMsg);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">// For Android &gt; 5.0,移动端需要处理的核心</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onShowFileChooser</span><span class="params">(WebView webView, ValueCallback&lt;Uri[]&gt; uploadMsg, WebChromeClient.FileChooserParams fileChooserParams)</span></span></div><div class="line">    &#123;</div><div class="line">        openPicForWebClient(uploadMsg);</div><div class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</div><div class="line">    &#125;</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<p>,上传核心代码<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">Uri uri=...;</div><div class="line">mUploadMessage.onReceiveValue(uri);</div></pre></td></tr></table></figure></p>
<p>,在选择好图片或者文件后调用<code>ValueCallback&lt;Uri&gt; uploadMsg</code>的<code>onReceiveValue</code>传入文件的uri即可上传文件。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h5 id=&quot;一、webview加载缓慢-如何提高加载使用效率&quot;&gt;&lt;a href=&quot;#一、webview加载缓慢-如何提高加载使用效率&quot; class=&quot;headerlink&quot; title=&quot;一、webview加载缓慢,如何提高加载使用效率?&quot;&gt;&lt;/a&gt;一、webview加载缓慢
    
    </summary>
    
      <category term="android" scheme="http://codewang.site/categories/android/"/>
    
    
      <category term="android" scheme="http://codewang.site/tags/android/"/>
    
      <category term="WebView" scheme="http://codewang.site/tags/WebView/"/>
    
  </entry>
  
  <entry>
    <title>更改android 4.4以上系统的状态栏和控制栏颜色</title>
    <link href="http://codewang.site/%E6%9B%B4%E6%94%B9android-4-4%E4%BB%A5%E4%B8%8A%E7%B3%BB%E7%BB%9F%E7%9A%84%E7%8A%B6%E6%80%81%E6%A0%8F%E5%92%8C%E6%8E%A7%E5%88%B6%E6%A0%8F%E9%A2%9C%E8%89%B2.html"/>
    <id>http://codewang.site/更改android-4-4以上系统的状态栏和控制栏颜色.html</id>
    <published>2017-07-03T09:17:44.000Z</published>
    <updated>2017-07-04T04:59:07.216Z</updated>
    
    <content type="html"><![CDATA[<div class="note primary"><p>心灵毒汤: 有时候不努力一把真的不知道什么叫绝望 </p>
</div>
<blockquote class="blockquote-center">这篇文章来介绍如何在java代码中更改系统状态栏和控制栏的颜色。</blockquote>



<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 设置顶部状态栏颜色（此功能仅19版本以上可用）</span></div><div class="line"><span class="keyword">if</span> (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.KITKAT) &#123;</div><div class="line">    Window window = getWindow();</div><div class="line">    window.addFlags(WindowManager.LayoutParams.FLAG_TRANSLUCENT_STATUS);</div><div class="line">    SystemBarTintManager tintManager = <span class="keyword">new</span> SystemBarTintManager(<span class="keyword">this</span>);</div><div class="line">    <span class="comment">// 激活状态栏设置</span></div><div class="line">    tintManager.setStatusBarTintEnabled(<span class="keyword">true</span>);</div><div class="line">    <span class="comment">// 使用颜色资源</span></div><div class="line">    tintManager.setStatusBarTintResource(R.color.button_pressed);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>上面代码的意思就是</p>
<ol>
<li><p>首先将状态栏的设置为透明，不透明，下面你设置的颜色是没有效果的。</p>
</li>
<li><p>然后再激活状态栏的设置。</p>
</li>
<li><p>给状态栏设置颜色</p>
</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;note primary&quot;&gt;&lt;p&gt;心灵毒汤: 有时候不努力一把真的不知道什么叫绝望 &lt;/p&gt;
&lt;/div&gt;
&lt;blockquote class=&quot;blockquote-center&quot;&gt;这篇文章来介绍如何在java代码中更改系统状态栏和控制栏的颜色。&lt;/bl
    
    </summary>
    
      <category term="android" scheme="http://codewang.site/categories/android/"/>
    
    
      <category term="android" scheme="http://codewang.site/tags/android/"/>
    
      <category term="状态栏" scheme="http://codewang.site/tags/%E7%8A%B6%E6%80%81%E6%A0%8F/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://codewang.site/hello-world.html"/>
    <id>http://codewang.site/hello-world.html</id>
    <published>2017-07-03T05:37:33.512Z</published>
    <updated>2017-07-03T05:37:33.513Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
    
    </summary>
    
    
  </entry>
  
</feed>
